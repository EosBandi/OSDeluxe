0x041 and 0x042 video output gain setting !


//Radar

	radar_widget_t r;
	long i;
	unsigned long d = (unsigned long)g.home.distance;

#define SIZE		300
#define CENTER_X	360
#define CENTER_Y	288
#define LEFT		CENTER_X - SIZE/2
#define TOP			CENTER_Y - SIZE/2
#define RIGHT		CENTER_X +SIZE/2
#define BOTTOM		CENTER_Y +SIZE/2



	struct point vdiamond_points[5] = { { 0,10 },{ 5,0 },{ 0,-10 },{ -5,0 } };
	struct polygon vdiamond;
	vdiamond.len = 4;
	vdiamond.points = vdiamond_points;

	struct point hdiamond_points[5] = { { 0,5 },{ 10,0 },{ 0,-5 },{ -10,0 } };
	struct polygon hdiamond;
	hdiamond.len = 4;
	hdiamond.points = hdiamond_points;


	r.x = LEFT;
	r.y = TOP;
	r.scale =2;
	r.size = SIZE;
	r.type = 0;
	osd_render_radar(&r);


	float a = sin(DEG2RAD(g.home.direction))*357;


	if (g.pthy_redraw)
	{
		for (U16 i = 0; i <= SIZE; i++)
		{
			if ((i % 50) == 0)
			{
				OSD256_drawline(PTH_Y, COLOR_REC_WHITE, RIGHT + 20, TOP + i, RIGHT + 40, TOP + i);
				//OSD256_drawline(PTH_Y, COLOR_REC_WHITE, LEFT + i - 1, BOTTOM + 20, LEFT + i - 1, BOTTOM + 40);
			}

		}
	}




#define SLOPE 12


	if (g.home.distance <= 2000)
	{

		float d_alt = g.home.distance * tan(DEG2RAD(SLOPE));
		int diff = (g.altitude - g.home.home_alt - d_alt);


		if (abs(diff) <= 50)
		{
			move_polygon(&hdiamond, RIGHT + 30, CENTER_Y - diff);
			draw_polygon(&hdiamond, COLOR_YELLOW);
		}
		else if (diff > 50)
		{
			move_polygon(&hdiamond, RIGHT + 30, TOP);
			draw_polygon(&hdiamond, COLOR_RED);

		}
		else if (diff < -50)
		{
			move_polygon(&hdiamond, RIGHT + 30, BOTTOM);
			draw_polygon(&hdiamond, COLOR_RED);
		}
	}
